<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mongo="http://www.springframework.org/schema/data/mongo"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/schema/util
        http://www.springframework.org/schema/schema/util/spring-util-4.1.xsd
        http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd
        ">

	<context:annotation-config />

	<mongo:mongo id="mongo"  replica-set="${mongo.replicaSet}">  
      <!--  
         connections-per-host: 每个主机答应的连接数（每个主机的连接池大小），当连接池被用光时，会被阻塞住   
         max-wait-time: 被阻塞线程从连接池获取连接的最长等待时间（ms）  
         connect-timeout:在建立（打开）套接字连接时的超时时间（ms）  
         socket-timeout:套接字超时时间;该值会被传递给Socket.setSoTimeout(int)  
         slave-ok:指明是否答应驱动从从节点读取数据  
         -->  
    <mongo:options  
        connections-per-host="${mongo.connectionsPerHost}"  
        threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"  
        connect-timeout="${mongo.connectTimeout}"   
        max-wait-time="${mongo.maxWaitTime}"  
        auto-connect-retry="${mongo.autoConnectRetry}"   
        socket-keep-alive="${mongo.socketKeepAlive}"  
        socket-timeout="${mongo.socketTimeout}"  
        slave-ok="${mongo.slaveOk}"  
        write-number="${mongo.writeNumber}"  
        write-timeout="${mongo.riteTimeout}"  
        write-fsync="${mongo.writeFsync}"/>  
    </mongo:mongo>
    
    <mongo:db-factory id="mongoDbFactory" dbname="${mongo.database}" mongo-ref="mongo"/>

    <!-- mongo模板操作对象 -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
    </bean>

    <!-- MongoDB GridFS Template 支持，操作mongodb存放的文件 -->
    <mongo:mapping-converter id="converter" db-factory-ref="mongoDbFactory"/>
    <bean id="gridFsTemplate" class="org.springframework.data.mongodb.gridfs.GridFsTemplate">
      <constructor-arg ref="mongoDbFactory"/>
      <constructor-arg ref="converter"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 扫描实现 -->
    <!-- <context:component-scan base-package="com.qooco.mongo.impl" /> -->
    
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="druid-stat-interceptor"
			pointcut-ref="druid-stat-pointcut" />
	</aop:config>

</beans>